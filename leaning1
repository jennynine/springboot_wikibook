# 스프링부트 프로젝트의 생성 (p.165)
. Developer Tools: Lombok, Spring Configuration Processor
. Web: Spring Web
. SQL: Spring Data JPA, MariaDB Driver 


---
# 4장 - talend api tester 사용법 소개

---
# 6장 - 데이타베이스 연동
 - 엔티티 관련 기본 어노테이션: 
   @Entity
   @Table
   @Id, @GeneratedValue - AUTO, IDENTITY, SEQUENCE, TABLE
   @Column
   @Transient
   
  - 스프링에서 관리하는 빈으로 등록
  @Component 또는 @Service


-getById()와 findById()의 차이  
 data/dao/impl/ProductDaOImpl.java
. getById(): em의 getReference()메소들 호출하면서 프락시 객체를 리턴. 실제 쿼리는 프락시 객체를 통해 최초로 접근되는 시점에 실행. 없으면 EntityNotFoundException,dmf qkftod
   예) Product selectProduct = productRepository.getById(number);
   
. findById(): 영속성 컨텍스트의 캐시에서 값을 조회하고 없으면 실제 데이타베이스에서 조회. 리턴 값으로 Optional 객체를 전달. IsPresent()를 이용해서 얻은 후에 get
   예) Optional<Product> selectProduct=productRepository.findById(number);
      if(selecProduct.isPresent())
         Product product = selectProduct.get();
         .. 
         product.setName(name);
         .. 
         updateProduct = productRepository.save(product);
         
         
# 7장 테스트 
(부가 설명: 테스트에 대한 예가 상세함)
- JUNIT 5의 소개: JUnit Platform, JUnit Jupiter, JUnit Vintage으로 구성
- 테스트코드 작성 방법: Given-When-Then 패턴
- 좋은 테스트를 작성하는 5가지 속성(F.I.R.S.T)
- 테스트 
 . 컨트롤러 : 웹에 가까운 모듈. @WebMvcTest, @MocBen @Test @DisplayName.
 . 서비스 : Mockito verify, beforeach, .. @Mockbean 등 이용 
 . 리포지토리 : 기존 db 대신 h2DB 등을 이용해 given-when-then 패턴으로 작성
 . 코드 커버리지: JaCoCo- java code coverage: JUnit 테스트를 통해 애플리케이션 코드가 얼마나 테스트됐는지 Line과 branch를 기준으로 한 커버리지 리포트
 
 . JaCoCo: 테스트 커버리지 관리 
 . 현업에서는 Jacoco와 SonarQube의 솔루션으로 연동
